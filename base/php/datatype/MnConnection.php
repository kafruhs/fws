<?php
/**
 * Created by PhpStorm.
 * User: Alex
 * Date: 27.05.2015
 * Time: 07:20
 */

class base_datatype_MnConnection extends Datatype
{
    public function fromDB($value)
    {
        $connectedClass = $this->fi->getConnectedClass();
        $class = $this->fi->getClass();
        /** @var BaseConnectionObject $connectionObj */
        $connectionObj = new $connectedClass();
        $connObj = $connectionObj->find($value, $class);
        return $connObj;
    }

    protected function toInternalValue($value)
    {
        $connectedClass = $this->fi->getConnectedClass();
        $objClass = $this->fi->getClass();
        $connObjs = [];
        foreach ($value as $otherKey) {
            /** @var BaseConnectionObject $connObj */
            $connObj = new $connectedClass();
            $connObj->setOtherLKForClass($objClass, $otherKey);
            $connObjs[] = $connObj;
        }
        return $connObjs;
    }

    public function toDB($value)
    {
        return parent::toDB($value); // TODO: Change the autogenerated stub
    }

    public function toExternal($value)
    {
        $mnList = [];
        foreach ($value as $baseConnObject) {
            if (!$baseConnObject instanceof BaseConnectionObject) {
                throw new BaseException('No BaseConnectionObject given');
            }
            $fieldToShow = $this->fi->getFieldsOfConnectedClass();
            $class = $this->fi->getClass();
            $class = $baseConnObject->getOtherClass($class);
            $obj = Factory::loadObject($class, (int) $baseConnObject->getLKForClass($class));
            $mnList[] = $obj[$fieldToShow];
        }
        if (empty($mnList)) {
            return '';
        }
        return implode(', ', $mnList);
    }

    public function fromDBToExternal($value)
    {
        return parent::fromDBToExternal($value); // TODO: Change the autogenerated stub
    }

    protected function validateValue($value)
    {
        return parent::validateValue($value); // TODO: Change the autogenerated stub
    }

    public function getEmptyValue()
    {
        return parent::getEmptyValue(); // TODO: Change the autogenerated stub
    }

    public function getJSColModelElement()
    {
        return parent::getJSColModelElement(); // TODO: Change the autogenerated stub
    }

}